import pygame
import sys
from random import randrange
from math import hypot
from pygame.locals import QUIT,MOUSEMOTION,MOUSEBUTTONDOWN,KEYDOWN,KEYUP,K_LCTRL
from threeD_object import vec3, threeD, draw, normal_vec

pygame.init()
SUR = pygame.display.set_mode((500,500))
CLOCK = pygame.time.Clock()

Obj = threeD([(-80.9, -50.0, 0.0), (-53.933, -60.3, -16.667), (-70.6, -33.333, -26.967), (-26.967, -70.6, -33.333), (-43.633, -43.633, -43.633), (-60.3, -16.667, -53.933), (0.0, -80.9, -50.0), (-16.667, -53.933, -60.3), (-33.333, -26.967, -70.6), (-50.0, 0.0, -80.9), (-53.933, -60.3, 16.667), (-26.967, -70.6, 33.333), (-26.967, -70.6, 0.0), (0.0, -80.9, 50.0), (0.0, -80.9, 16.667), (0.0, -80.9, -16.667), (-70.6, -33.333, 26.967), (-60.3, -16.667, 53.933), (-43.633, -43.633, 43.633), (-50.0, 0.0, 80.9), (-33.333, -26.967, 70.6), (-16.667, -53.933, 60.3), (-80.9, -16.667, 0.0), (-80.9, 16.667, 0.0), (-70.6, 0.0, 26.967), (-80.9, 50.0, 0.0), (-70.6, 33.333, 26.967), (-60.3, 16.667, 53.933), (-70.6, 0.0, -26.967), (-60.3, 16.667, -53.933), (-70.6, 33.333, -26.967), (-16.667, 0.0, -80.9), (-33.333, 26.967, -70.6), (16.667, 0.0, -80.9), (0.0, 26.967, -70.6), (-16.667, 53.933, -60.3), (50.0, 0.0, -80.9), (33.333, 26.967, -70.6), (16.667, 53.933, -60.3), (0.0, 80.9, -50.0), (0.0, -26.967, -70.6), (16.667, -53.933, -60.3), (33.333, -26.967, -70.6), (26.967, -70.6, -33.333), (53.933, -60.3, -16.667), (43.633, -43.633, -43.633), (80.9, -50.0, 0.0), (70.6, -33.333, -26.967), (60.3, -16.667, -53.933), (26.967, -70.6, 0.0), (26.967, -70.6, 33.333), (53.933, -60.3, 16.667), (16.667, -53.933, 60.3), (33.333, -26.967, 70.6), (43.633, -43.633, 43.633), (50.0, 0.0, 80.9), (60.3, -16.667, 53.933), (70.6, -33.333, 26.967), (-16.667, 0.0, 80.9), (16.667, 0.0, 80.9), (0.0, -26.967, 70.6), (-33.333, 26.967, 70.6), (-16.667, 53.933, 60.3), (0.0, 26.967, 70.6), (0.0, 80.9, 50.0), (16.667, 53.933, 60.3), (33.333, 26.967, 70.6), (-53.933, 60.3, 16.667), (-26.967, 70.6, 33.333), (-43.633, 43.633, 43.633), (-53.933, 60.3, -16.667), (-26.967, 70.6, -33.333), (-26.967, 70.6, 0.0), (0.0, 80.9, -16.667), (0.0, 80.9, 16.667), (-43.633, 43.633, -43.633), (26.967, 70.6, -33.333), (43.633, 43.633, -43.633), (53.933, 60.3, -16.667), (60.3, 16.667, -53.933), (70.6, 33.333, -26.967), (80.9, 50.0, 0.0), (70.6, 0.0, -26.967), (80.9, -16.667, 0.0), (80.9, 16.667, 0.0), (70.6, 0.0, 26.967), (60.3, 16.667, 53.933), (70.6, 33.333, 26.967), (43.633, 43.633, 43.633), (26.967, 70.6, 33.333), (53.933, 60.3, 16.667), (26.967, 70.6, -0.0)], [[0, 1, 2, (127, 127, 127)], [0, 10, 1, (127, 127, 127)], [0, 16, 10, (127, 127, 127)], [0, 22, 16, (127, 127, 127)], [0, 2, 22, (127, 127, 127)], [9, 31, 32, (127, 127, 127)], [9, 8, 31, (127, 127, 127)], [6, 43, 41, (127, 127, 127)], [6, 15, 43, (127, 127, 127)], [13, 52, 50, (127, 127, 127)], [19, 58, 20, (127, 127, 127)], [19, 61, 58, (127, 127, 127)], [25, 67, 26, (127, 127, 127)], [25, 70, 67, (127, 127, 127)], [9, 32, 29, (127, 127, 127)], [39, 38, 76, (127, 127, 127)], [36, 48, 79, (127, 127, 127)], [46, 57, 83, (127, 127, 127)], [55, 66, 86, (127, 127, 127)], [64, 74, 89, (127, 127, 127)], [1, 3, 4, (127, 127, 127)], [2, 4, 5, (127, 127, 127)], [10, 11, 12, (127, 127, 127)], [1, 12, 3, (127, 127, 127)], [16, 17, 18, (127, 127, 127)], [10, 18, 11, (127, 127, 127)], [22, 23, 24, (127, 127, 127)], [16, 24, 17, (127, 127, 127)], [2, 5, 28, (127, 127, 127)], [22, 28, 23, (127, 127, 127)], [31, 33, 34, (127, 127, 127)], [32, 34, 35, (127, 127, 127)], [8, 7, 40, (127, 127, 127)], [31, 40, 33, (127, 127, 127)], [43, 44, 45, (127, 127, 127)], [41, 45, 42, (127, 127, 127)], [15, 14, 49, (127, 127, 127)], [43, 49, 44, (127, 127, 127)], [52, 53, 54, (127, 127, 127)], [50, 54, 51, (127, 127, 127)], [58, 59, 60, (127, 127, 127)], [20, 60, 21, (127, 127, 127)], [61, 62, 63, (127, 127, 127)], [58, 63, 59, (127, 127, 127)], [67, 68, 69, (127, 127, 127)], [26, 69, 27, (127, 127, 127)], [70, 71, 72, (127, 127, 127)], [67, 72, 68, (127, 127, 127)], [32, 35, 75, (127, 127, 127)], [29, 75, 30, (127, 127, 127)], [38, 37, 77, (127, 127, 127)], [76, 77, 78, (127, 127, 127)], [48, 47, 82, (127, 127, 127)], [79, 82, 80, (127, 127, 127)], [57, 56, 85, (127, 127, 127)], [83, 85, 84, (127, 127, 127)], [66, 65, 88, (127, 127, 127)], [86, 88, 87, (127, 127, 127)], [74, 73, 91, (127, 127, 127)], [89, 91, 90, (127, 127, 127)], [3, 6, 7, (127, 127, 127)], [4, 7, 8, (127, 127, 127)], [5, 8, 9, (127, 127, 127)], [11, 13, 14, (127, 127, 127)], [12, 14, 15, (127, 127, 127)], [3, 15, 6, (127, 127, 127)], [17, 19, 20, (127, 127, 127)], [18, 20, 21, (127, 127, 127)], [11, 21, 13, (127, 127, 127)], [23, 25, 26, (127, 127, 127)], [24, 26, 27, (127, 127, 127)], [17, 27, 19, (127, 127, 127)], [5, 9, 29, (127, 127, 127)], [28, 29, 30, (127, 127, 127)], [23, 30, 25, (127, 127, 127)], [33, 36, 37, (127, 127, 127)], [34, 37, 38, (127, 127, 127)], [35, 38, 39, (127, 127, 127)], [7, 6, 41, (127, 127, 127)], [40, 41, 42, (127, 127, 127)], [33, 42, 36, (127, 127, 127)], [44, 46, 47, (127, 127, 127)], [45, 47, 48, (127, 127, 127)], [42, 48, 36, (127, 127, 127)], [14, 13, 50, (127, 127, 127)], [49, 50, 51, (127, 127, 127)], [44, 51, 46, (127, 127, 127)], [53, 55, 56, (127, 127, 127)], [54, 56, 57, (127, 127, 127)], [51, 57, 46, (127, 127, 127)], [59, 55, 53, (127, 127, 127)], [60, 53, 52, (127, 127, 127)], [21, 52, 13, (127, 127, 127)], [62, 64, 65, (127, 127, 127)], [63, 65, 66, (127, 127, 127)], [59, 66, 55, (127, 127, 127)], [68, 64, 62, (127, 127, 127)], [69, 62, 61, (127, 127, 127)], [27, 61, 19, (127, 127, 127)], [71, 39, 73, (127, 127, 127)], [72, 73, 74, (127, 127, 127)], [68, 74, 64, (127, 127, 127)], [35, 39, 71, (127, 127, 127)], [75, 71, 70, (127, 127, 127)], [30, 70, 25, (127, 127, 127)], [37, 36, 79, (127, 127, 127)], [77, 79, 80, (127, 127, 127)], [78, 80, 81, (127, 127, 127)], [47, 46, 83, (127, 127, 127)], [82, 83, 84, (127, 127, 127)], [80, 84, 81, (127, 127, 127)], [56, 55, 86, (127, 127, 127)], [85, 86, 87, (127, 127, 127)], [84, 87, 81, (127, 127, 127)], [65, 64, 89, (127, 127, 127)], [88, 89, 90, (127, 127, 127)], [87, 90, 81, (127, 127, 127)], [73, 39, 76, (127, 127, 127)], [91, 76, 78, (127, 127, 127)], [90, 78, 81, (127, 127, 127)], [2, 1, 4, (127, 127, 127)], [1, 10, 12, (127, 127, 127)], [10, 16, 18, (127, 127, 127)], [16, 22, 24, (127, 127, 127)], [22, 2, 28, (127, 127, 127)], [32, 31, 34, (127, 127, 127)], [31, 8, 40, (127, 127, 127)], [41, 43, 45, (127, 127, 127)], [43, 15, 49, (127, 127, 127)], [50, 52, 54, (127, 127, 127)], [20, 58, 60, (127, 127, 127)], [58, 61, 63, (127, 127, 127)], [26, 67, 69, (127, 127, 127)], [67, 70, 72, (127, 127, 127)], [29, 32, 75, (127, 127, 127)], [76, 38, 77, (127, 127, 127)], [79, 48, 82, (127, 127, 127)], [83, 57, 85, (127, 127, 127)], [86, 66, 88, (127, 127, 127)], [89, 74, 91, (127, 127, 127)], [4, 3, 7, (127, 127, 127)], [5, 4, 8, (127, 127, 127)], [12, 11, 14, (127, 127, 127)], [3, 12, 15, (127, 127, 127)], [18, 17, 20, (127, 127, 127)], [11, 18, 21, (127, 127, 127)], [24, 23, 26, (127, 127, 127)], [17, 24, 27, (127, 127, 127)], [28, 5, 29, (127, 127, 127)], [23, 28, 30, (127, 127, 127)], [34, 33, 37, (127, 127, 127)], [35, 34, 38, (127, 127, 127)], [40, 7, 41, (127, 127, 127)], [33, 40, 42, (127, 127, 127)], [45, 44, 47, (127, 127, 127)], [42, 45, 48, (127, 127, 127)], [49, 14, 50, (127, 127, 127)], [44, 49, 51, (127, 127, 127)], [54, 53, 56, (127, 127, 127)], [51, 54, 57, (127, 127, 127)], [60, 59, 53, (127, 127, 127)], [21, 60, 52, (127, 127, 127)], [63, 62, 65, (127, 127, 127)], [59, 63, 66, (127, 127, 127)], [69, 68, 62, (127, 127, 127)], [27, 69, 61, (127, 127, 127)], [72, 71, 73, (127, 127, 127)], [68, 72, 74, (127, 127, 127)], [75, 35, 71, (127, 127, 127)], [30, 75, 70, (127, 127, 127)], [77, 37, 79, (127, 127, 127)], [78, 77, 80, (127, 127, 127)], [82, 47, 83, (127, 127, 127)], [80, 82, 84, (127, 127, 127)], [85, 56, 86, (127, 127, 127)], [84, 85, 87, (127, 127, 127)], [88, 65, 89, (127, 127, 127)], [87, 88, 90, (127, 127, 127)], [91, 73, 76, (127, 127, 127)], [90, 91, 78, (127, 127, 127)]])
touch_surs = ((1, 2, 3, 4, 124, 20, 21, 23, 120, 121, 28), (0, 121, 2, 3, 4, 20, 22, 23, 120, 25, 122), (0, 1, 121, 3, 4, 123, 22, 24, 25, 122, 27), (0, 1, 2, 4, 122, 27, 24, 26, 123, 124, 29), (0, 1, 2, 3, 124, 21, 120, 26, 123, 28, 29), (33, 6, 134, 72, 14, 48, 30, 126, 125, 62, 31), (32, 33, 5, 72, 141, 14, 125, 30, 126, 61, 62), (128, 65, 34, 35, 37, 8, 78, 79, 152, 60, 127), (64, 65, 128, 34, 36, 37, 7, 78, 143, 60, 127), (129, 161, 68, 38, 39, 156, 84, 85, 91, 92, 63), (66, 98, 130, 131, 67, 71, 40, 41, 11, 43, 144), (97, 66, 98, 131, 165, 130, 71, 40, 10, 42, 43), (132, 69, 133, 70, 104, 74, 44, 13, 45, 47, 146), (132, 69, 133, 103, 104, 169, 74, 12, 44, 46, 47), (5, 6, 134, 72, 73, 48, 49, 148, 125, 62, 31), (99, 102, 135, 76, 77, 50, 51, 178, 117, 118, 151), (136, 105, 106, 75, 170, 80, 82, 83, 52, 53, 155), (137, 108, 109, 172, 81, 55, 86, 54, 88, 89, 159), (163, 138, 174, 111, 112, 87, 56, 57, 90, 94, 95), (96, 100, 101, 167, 139, 176, 114, 115, 58, 59, 93), (0, 1, 65, 140, 141, 143, 21, 23, 120, 121, 60, 61), (0, 4, 72, 140, 28, 141, 20, 148, 120, 124, 61, 62), (64, 1, 2, 121, 68, 142, 143, 145, 23, 25, 122, 63), (0, 1, 64, 65, 140, 142, 143, 20, 22, 120, 121, 60), (2, 3, 66, 67, 71, 123, 144, 145, 147, 25, 122, 27), (1, 2, 67, 68, 142, 144, 145, 22, 24, 121, 122, 63), (3, 4, 69, 70, 27, 74, 146, 147, 149, 123, 124, 29), (2, 3, 26, 66, 70, 71, 144, 146, 147, 24, 122, 123), (0, 4, 72, 73, 141, 148, 21, 149, 120, 124, 29, 62), (3, 4, 69, 73, 74, 28, 146, 148, 149, 26, 123, 124), (33, 5, 6, 75, 76, 80, 150, 151, 153, 125, 126, 31), (5, 134, 102, 168, 76, 77, 14, 48, 150, 151, 125, 30), (33, 6, 140, 141, 78, 79, 152, 153, 126, 60, 61, 62), (32, 5, 6, 75, 79, 80, 150, 30, 152, 153, 125, 126), (128, 35, 37, 7, 8, 81, 82, 86, 154, 155, 157, 127), (34, 7, 78, 79, 80, 82, 83, 152, 153, 154, 155, 127), (64, 65, 128, 37, 8, 142, 143, 84, 85, 156, 157, 63), (128, 34, 36, 7, 8, 81, 85, 86, 154, 156, 157, 127), (160, 161, 129, 39, 9, 87, 88, 90, 91, 92, 158, 159), (129, 38, 9, 84, 85, 86, 88, 89, 156, 157, 158, 159), (160, 161, 130, 131, 163, 41, 10, 43, 11, 90, 91, 95), (160, 161, 66, 67, 130, 68, 40, 10, 144, 145, 91, 92), (96, 97, 98, 131, 162, 165, 164, 163, 11, 43, 93, 94), (160, 130, 131, 162, 163, 40, 10, 11, 42, 90, 94, 95), (96, 97, 132, 133, 101, 164, 167, 165, 12, 13, 45, 47), (97, 98, 132, 69, 70, 164, 165, 71, 12, 44, 146, 147), (99, 100, 133, 102, 103, 104, 169, 166, 168, 167, 13, 47), (96, 132, 133, 100, 166, 167, 101, 164, 12, 13, 44, 46), (5, 134, 102, 168, 103, 169, 77, 14, 49, 151, 125, 31), (134, 103, 72, 73, 168, 169, 74, 104, 14, 48, 148, 149), (135, 105, 170, 75, 76, 77, 106, 15, 171, 51, 150, 151), (135, 106, 170, 171, 107, 15, 178, 50, 179, 117, 118, 119), (136, 108, 172, 109, 173, 16, 81, 82, 83, 53, 154, 155), (136, 105, 106, 170, 172, 109, 173, 107, 16, 110, 171, 52), (137, 174, 111, 112, 17, 175, 55, 87, 88, 89, 158, 159), (137, 172, 108, 109, 174, 112, 17, 175, 110, 113, 173, 54), (162, 163, 138, 176, 177, 18, 114, 115, 57, 93, 94, 95), (138, 174, 111, 112, 176, 18, 115, 177, 113, 116, 175, 56), (99, 100, 101, 166, 167, 139, 178, 19, 179, 117, 118, 59), (139, 176, 177, 114, 115, 19, 178, 118, 179, 116, 119, 58), (32, 65, 7, 8, 140, 78, 143, 20, 23, 152, 61), (32, 6, 140, 141, 78, 20, 21, 120, 126, 60, 152, 62), (32, 5, 6, 72, 141, 14, 148, 21, 28, 61, 126), (64, 68, 36, 9, 142, 145, 156, 84, 22, 25, 92), (128, 65, 36, 8, 142, 143, 84, 22, 23, 121, 156, 63), (64, 128, 36, 7, 8, 140, 78, 143, 20, 23, 60), (98, 67, 130, 71, 41, 10, 11, 144, 147, 24, 27), (161, 66, 130, 68, 41, 10, 144, 145, 24, 25, 122, 92), (161, 67, 41, 9, 142, 145, 84, 22, 25, 92, 63), (132, 70, 104, 74, 12, 13, 45, 146, 149, 26, 29), (98, 132, 69, 165, 71, 27, 12, 45, 146, 147, 26, 123), (66, 98, 165, 70, 10, 11, 45, 144, 147, 24, 27), (5, 6, 134, 73, 141, 14, 49, 148, 21, 28, 62), (134, 72, 104, 74, 169, 28, 14, 49, 148, 149, 124, 29), (69, 104, 73, 169, 12, 13, 49, 146, 149, 26, 29), (33, 105, 170, 76, 80, 16, 50, 83, 150, 153, 30), (135, 105, 170, 75, 77, 15, 50, 150, 151, 125, 30, 31), (99, 102, 135, 168, 76, 15, 48, 50, 117, 151, 31), (32, 65, 35, 7, 8, 140, 79, 152, 60, 61, 127), (32, 33, 35, 7, 78, 80, 83, 152, 153, 155, 126, 127), (33, 35, 105, 75, 79, 16, 83, 150, 153, 155, 30), (34, 37, 108, 172, 17, 82, 52, 86, 89, 154, 157), (34, 35, 136, 108, 172, 16, 81, 83, 52, 154, 155, 127), (35, 136, 105, 75, 79, 80, 16, 82, 52, 153, 155), (64, 129, 36, 68, 39, 9, 142, 92, 85, 156, 63), (128, 129, 36, 37, 39, 9, 84, 86, 89, 156, 157, 159), (34, 37, 39, 108, 81, 17, 85, 89, 154, 157, 159), (160, 38, 174, 111, 18, 54, 88, 90, 91, 158, 95), (129, 38, 39, 137, 174, 111, 17, 54, 87, 89, 158, 159), (39, 137, 108, 17, 81, 85, 86, 54, 88, 157, 159), (160, 163, 38, 40, 43, 111, 18, 87, 91, 158, 95), (160, 161, 130, 129, 38, 40, 41, 9, 87, 90, 92, 158), (161, 129, 67, 68, 38, 41, 9, 145, 84, 91, 63), (96, 97, 162, 164, 101, 42, 176, 114, 19, 56, 94), (162, 131, 163, 42, 43, 138, 176, 114, 18, 56, 93, 95), (160, 163, 40, 138, 43, 111, 18, 87, 56, 90, 94), (97, 162, 164, 101, 167, 42, 44, 47, 114, 19, 93), (96, 162, 98, 132, 164, 165, 131, 42, 11, 44, 45, 93), (97, 66, 131, 165, 70, 71, 42, 11, 10, 45, 147), (100, 102, 166, 168, 103, 77, 46, 15, 178, 117, 58), (99, 133, 166, 167, 101, 139, 46, 47, 178, 19, 117, 58), (96, 164, 100, 167, 139, 44, 47, 114, 19, 58, 93), (99, 166, 103, 168, 77, 46, 15, 48, 117, 151, 31), (99, 133, 134, 102, 168, 169, 166, 104, 13, 46, 48, 49), (133, 69, 103, 73, 74, 169, 12, 13, 46, 49, 149), (136, 170, 75, 76, 106, 16, 80, 50, 83, 53, 150), (135, 136, 105, 170, 171, 107, 173, 110, 16, 50, 51, 53), (106, 171, 173, 110, 113, 179, 51, 53, 118, 119, 116), (137, 172, 109, 81, 82, 17, 52, 86, 55, 89, 154), (136, 137, 172, 173, 108, 110, 175, 17, 113, 52, 53, 55), (106, 171, 107, 173, 109, 175, 113, 116, 53, 119, 55), (138, 174, 112, 18, 54, 87, 88, 57, 90, 158, 95), (137, 138, 174, 175, 111, 113, 18, 177, 116, 54, 55, 57), (107, 173, 109, 175, 110, 112, 177, 116, 119, 55, 57), (96, 162, 101, 139, 176, 19, 115, 56, 59, 93, 94), (138, 139, 176, 177, 114, 19, 116, 179, 119, 56, 57, 59), (107, 110, 175, 112, 177, 113, 115, 179, 119, 57, 59), (99, 100, 166, 102, 135, 77, 15, 178, 51, 118, 58), (135, 139, 107, 171, 15, 178, 179, 51, 117, 119, 58, 59), (107, 171, 110, 177, 113, 115, 116, 179, 51, 118, 59), (0, 1, 4, 140, 28, 141, 20, 21, 23, 121, 124, 61), (0, 1, 2, 64, 142, 143, 20, 22, 23, 120, 25, 122), (1, 2, 3, 67, 123, 144, 145, 22, 24, 121, 27, 25), (2, 3, 4, 26, 70, 146, 147, 24, 122, 27, 124, 29), (0, 3, 4, 73, 148, 21, 149, 120, 26, 123, 28, 29), (33, 5, 134, 6, 76, 14, 48, 150, 151, 126, 30, 31), (32, 33, 5, 6, 141, 79, 152, 61, 62, 153, 125, 30), (128, 34, 35, 37, 7, 8, 78, 79, 82, 152, 154, 155), (64, 65, 34, 36, 37, 7, 8, 143, 85, 156, 157, 127), (161, 38, 39, 9, 92, 84, 85, 88, 91, 156, 158, 159), (160, 161, 66, 67, 131, 40, 41, 10, 11, 43, 144, 91), (97, 130, 98, 162, 165, 163, 40, 10, 43, 11, 42, 94), (97, 164, 69, 70, 133, 165, 12, 45, 13, 44, 47, 146), (132, 100, 166, 103, 104, 169, 167, 12, 13, 44, 47, 46), (5, 103, 72, 73, 168, 169, 14, 48, 49, 148, 125, 31), (106, 170, 76, 77, 171, 15, 178, 51, 50, 117, 118, 151), (105, 106, 170, 172, 109, 173, 16, 82, 83, 52, 53, 155), (172, 108, 109, 174, 112, 17, 175, 54, 55, 88, 89, 159), (163, 174, 111, 112, 176, 18, 115, 177, 56, 57, 94, 95), (100, 101, 167, 176, 114, 115, 19, 178, 118, 179, 58, 59), (32, 65, 141, 78, 143, 152, 20, 21, 23, 120, 60, 61), (32, 6, 72, 140, 148, 21, 20, 120, 126, 28, 61, 62), (64, 68, 36, 143, 145, 84, 22, 23, 121, 156, 25, 63), (64, 65, 128, 36, 8, 140, 142, 20, 22, 23, 121, 60), (66, 67, 130, 71, 41, 10, 145, 147, 24, 25, 122, 27), (161, 67, 68, 41, 142, 144, 22, 24, 25, 122, 92, 63), (132, 69, 70, 27, 74, 12, 45, 147, 149, 26, 123, 29), (66, 98, 165, 70, 71, 123, 45, 144, 146, 24, 26, 27), (134, 72, 73, 28, 141, 14, 49, 149, 21, 124, 29, 62), (69, 104, 73, 74, 169, 124, 49, 146, 148, 26, 28, 29), (33, 105, 170, 75, 76, 80, 50, 151, 153, 125, 30, 31), (102, 135, 168, 76, 77, 15, 48, 50, 150, 125, 30, 31), (32, 33, 35, 7, 140, 78, 79, 153, 60, 61, 126, 127), (32, 33, 35, 75, 79, 80, 83, 150, 152, 126, 155, 30), (34, 35, 37, 108, 172, 81, 82, 52, 86, 155, 157, 127), (34, 35, 136, 79, 80, 16, 82, 83, 52, 153, 154, 127), (128, 64, 129, 36, 37, 39, 9, 142, 84, 85, 157, 63), (128, 34, 36, 37, 39, 81, 85, 86, 89, 154, 156, 159), (160, 129, 38, 39, 174, 111, 54, 87, 88, 90, 91, 159), (129, 38, 39, 137, 17, 85, 86, 54, 88, 89, 157, 158), (161, 130, 163, 38, 40, 41, 43, 87, 90, 91, 158, 95), (160, 129, 130, 67, 68, 38, 40, 41, 9, 145, 91, 92), (96, 97, 131, 163, 164, 42, 43, 176, 114, 56, 93, 94), (160, 162, 131, 40, 42, 43, 138, 18, 56, 90, 94, 95), (96, 97, 162, 132, 165, 101, 167, 42, 44, 45, 47, 93), (97, 98, 131, 132, 164, 70, 71, 42, 11, 44, 45, 147), (99, 100, 133, 102, 167, 103, 168, 46, 47, 178, 117, 58), (96, 164, 101, 100, 133, 166, 139, 44, 46, 47, 19, 58), (99, 134, 103, 102, 169, 166, 77, 46, 48, 49, 151, 31), (133, 134, 103, 104, 73, 74, 168, 13, 46, 48, 49, 149), (135, 136, 105, 106, 171, 75, 76, 16, 50, 51, 53, 150), (135, 106, 107, 170, 173, 110, 50, 51, 179, 53, 118, 119), (136, 137, 108, 109, 173, 81, 82, 17, 52, 53, 55, 154), (136, 106, 171, 107, 109, 110, 172, 175, 113, 52, 53, 55), (137, 138, 175, 112, 111, 18, 54, 55, 87, 57, 88, 158), (137, 173, 109, 110, 112, 113, 174, 177, 116, 54, 55, 57), (162, 138, 139, 177, 114, 115, 19, 56, 57, 59, 93, 94), (138, 175, 112, 113, 176, 115, 116, 179, 119, 56, 57, 59), (99, 100, 166, 135, 139, 15, 179, 51, 117, 118, 58, 59), (139, 107, 171, 177, 178, 115, 116, 51, 118, 119, 58, 59))
num_color = ((255,255,255),(0, 0, 255),(0,255,0),(255,0,0),(0, 0, 128),(153,76,0),(153,76,0),(153,76,0),(153,76,0),(153,76,0),(153,76,0),(153,76,0),(0,0,0))

def generate_map():
    global sur_status
    global opened
    sur_status = [[0,False,False] for i in range(180)]
    opened = 0
    for i in range(180):
        Obj.color[i] = (127,127,127)
    i = 0
    while i < 15:
        index = randrange(180)
        if sur_status[index][0] < 12:
            sur_status[index][0] = 12
            for j in touch_surs[index]:
                sur_status[j][0] += 1
            i += 1
    for i in range(180):
        sur_status[i][0] = min(sur_status[i][0],12)
def sur_clicked(sur,pos):
    pos_vec = vec3(pos[0]-250,pos[1]-250,2048)
    normal = normal_vec(sur,Obj.points)
    start = vec3(0,0,-1024)-(Obj.points[sur[0]]+Obj.points[sur[1]]+Obj.points[sur[2]])/3
    if pos_vec*normal > 0:
        return 100
    return (start-pos_vec*((start*normal)/(pos_vec*normal))).length
def open(index):
    global opened
    if sur_status[index][1]:
        return
    if sur_status[index][0] == 12:
        generate_map()
        return
    opened += 1
    if opened == 165:
        pygame.quit()
        sys.exit()
    sur_status[index][1] = True
    Obj.color[index] = num_color[sur_status[index][0]]
    if sur_status[index][0] == 0:
        for i in touch_surs[index]:
            open(i)
def main():
    generate_map()
    move = False
    while True:
        for event in pygame.event.get():
            if event.type == QUIT:
                pygame.quit()
                sys.exit()
            elif event.type == MOUSEBUTTONDOWN:
                index = list(range(180))
                index.sort(key = lambda i:sur_clicked(Obj.surfaces[i],event.pos))
                if not sur_status[index[0]][1]:
                    if event.button == 1 and not sur_status[index[0]][2]:
                        open(index[0])
                    if event.button == 3:
                        sur_status[index[0]][2] = not sur_status[index[0]][2]
                        Obj.color[index[0]] = (255,127,127) if sur_status[index[0]][2] else (127,127,127)
            elif event.type == KEYDOWN:
                if event.key == K_LCTRL:
                    move = True
                    pygame.mouse.get_rel()
            elif event.type == KEYUP:
                if event.key == K_LCTRL:
                    move = False
            elif event.type == MOUSEMOTION and move:
                try:
                    pos = pygame.mouse.get_rel()
                    Obj.rotate(hypot(pos[0], pos[1])/200,vec3(pos[1], -pos[0], 0))
                except ZeroDivisionError:
                    pass
        SUR.fill((223,223,223))
        for polygon in draw((Obj,),vec3(-1,-1,1),vec3(0,0,-1024),vec3(0,0,1),500,500,2048):
            pygame.draw.polygon(SUR, polygon[-1], polygon[:-1])
        pygame.display.update()
        CLOCK.tick(20)
if __name__ == "__main__":
    main()
